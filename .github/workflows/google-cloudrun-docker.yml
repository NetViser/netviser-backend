name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'netviser'
  REGION: 'asia-east1'
  GAR_NAME: 'netviser-gar'
  GAR_LOCATION: 'asia-east1'
  SERVICE: 'netviser-app'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: 'actions/checkout@v4'

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: GAR Auth
        run: |
          gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Deploy to Cloud Run with custom CPU and memory settings using gcloud
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --cpu 4 \
            --max-instances 2 \
            --memory 12Gi \
            --platform managed \
            --set-env-vars "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_REGION=${{ secrets.AWS_REGION }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},GEMINI_MODEL=${{ secrets.GEMINI_MODEL }},LAMBDA_INFERENCE_FUNCTION_NAME=${{ secrets.LAMBDA_INFERENCE_FUNCTION_NAME }},MAX_UPLOAD_SIZE=${{ secrets.MAX_UPLOAD_SIZE }},REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }},REDIS_PORT=${{ secrets.REDIS_PORT }},REDIS_USERNAME=${{ secrets.REDIS_USERNAME }},S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }},ENV=${{ secrets.ENV }}"

      - name: Allow Unauthenticated Access
        run: |
          gcloud run services add-iam-policy-binding ${{ env.SERVICE }} \
            --region=${{ env.REGION }} \
            --project=${{ env.PROJECT_ID }} \
            --member="allUsers" \
            --role="roles/run.invoker"
